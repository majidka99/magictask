---
- name: Deploy Majitask v3.0 Node.js Application
  hosts: localhost
  become: true
  vars:
    domain_name: "majitask.fun"
    app_path: "/home/apps/majitask"
    app_user: "majitask"
    db_name: "majitask"
    db_user: "majitask"
    db_password: "majitask_secure_2024!"
    jwt_secret: "your-super-secure-jwt-secret-key-2024"
    admin_email: "admin@majitask.fun"
    admin_password: "Admin123!"
    
  tasks:
    - name: Create majitask user for running the application
      user:
        name: "{{ app_user }}"
        home: "{{ app_path }}"
        shell: /bin/bash
        system: yes
        create_home: no

    - name: Ensure the majitask app directory exists with correct ownership
      file:
        path: "{{ app_path }}"
        state: directory
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: '0755'

    - name: Install Node.js 18+ and npm from NodeSource repository
      shell: |
        curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
        apt-get install -y nodejs
      args:
        creates: /usr/bin/node

    - name: Install PM2 and required global packages
      npm:
        name: "{{ item }}"
        global: yes
      loop:
        - pm2
        - nodemon

    - name: Create .env file for production with v3.0 configuration
      copy:
        dest: "{{ app_path }}/.env"
        content: |
          # Server Configuration
          NODE_ENV=production
          PORT=3001
          HOST=0.0.0.0
          
          # Database Configuration
          DB_HOST=localhost
          DB_PORT=3306
          DB_NAME={{ db_name }}
          DB_USER={{ db_user }}
          DB_PASSWORD={{ db_password }}
          DB_SSL=false
          DB_POOL_MIN=2
          DB_POOL_MAX=10
          
          # Authentication & Security
          JWT_SECRET={{ jwt_secret }}
          JWT_EXPIRES_IN=24h
          JWT_REFRESH_EXPIRES_IN=7d
          BCRYPT_ROUNDS=12
          SESSION_SECRET=your-session-secret-key-2024
          
          # Rate Limiting
          RATE_LIMIT_WINDOW=15
          RATE_LIMIT_MAX=100
          AUTH_RATE_LIMIT_WINDOW=15
          AUTH_RATE_LIMIT_MAX=5
          
          # Email Configuration
          SMTP_HOST=smtp.gmail.com
          SMTP_PORT=587
          SMTP_SECURE=false
          SMTP_USER=majitask.app@gmail.com
          SMTP_PASS=FFaa8645!
          FROM_EMAIL=majitask.app@gmail.com
          FROM_NAME=MajiTask Notifications
          EMAIL_RATE_LIMIT=10
          EMAIL_RATE_WINDOW=900000
          
          # API Configuration
          API_KEY=majitask-v3-secure-api-key-2024
          VITE_API_BASE_URL=https://majitask.fun
          VITE_EMAIL_API_KEY=majitask-v3-secure-api-key-2024
          VITE_GOOGLE_PLACES_API_KEY=AIzaSyCw7te83yJnau87fj3xQR1mSWoTD-T13Xk
          
          # Admin Configuration
          ADMIN_EMAIL={{ admin_email }}
          ADMIN_PASSWORD={{ admin_password }}
          
          # File Upload
          MAX_FILE_SIZE=10485760
          UPLOAD_PATH=./uploads
          
          # Logging
          LOG_LEVEL=info
          LOG_FILE=logs/app.log
          AUDIT_LOG_FILE=logs/audit.log
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: '0600'

    - name: Create production environment file for runtime
      copy:
        dest: "{{ app_path }}/.env.production"
        content: |
          NODE_ENV=production
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: '0600'

    - name: Copy v3.0 package.json to production
      copy:
        src: "{{ app_path }}/package-v3.json"
        dest: "{{ app_path }}/package.json"
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: '0644'
        remote_src: yes

    - name: Install application dependencies with v3.0 packages
      npm:
        path: "{{ app_path }}"
        state: present
        production: yes
      become_user: "{{ app_user }}"

    - name: Create required directories
      file:
        path: "{{ app_path }}/{{ item }}"
        state: directory
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: '0755'
      loop:
        - uploads
        - logs
        - database
        - scripts

    - name: Set up database schema and migrations
      shell: |
        cd {{ app_path }}
        node scripts/migrate.js
      become_user: "{{ app_user }}"
      environment:
        NODE_ENV: production

    - name: Seed database with initial data
      shell: |
        cd {{ app_path }}
        node scripts/seed.js
      become_user: "{{ app_user }}"
      environment:
        NODE_ENV: production
      ignore_errors: yes

    - name: Build the React frontend
      shell: npm run build
      args:
        chdir: "{{ app_path }}"
      become_user: "{{ app_user }}"

    - name: Create PM2 ecosystem file for v3.0
      copy:
        dest: "{{ app_path }}/ecosystem.config.js"
        content: |
          module.exports = {
            apps: [{
              name: 'majitask-v3',
              script: 'server/index.js',
              cwd: '{{ app_path }}',
              instances: 1,
              autorestart: true,
              watch: false,
              max_memory_restart: '1G',
              env: {
                NODE_ENV: 'production',
                PORT: 3001
              },
              env_file: '.env',
              error_file: '{{ app_path }}/logs/err.log',
              out_file: '{{ app_path }}/logs/out.log',
              log_file: '{{ app_path }}/logs/combined.log',
              time: true,
              log_date_format: 'YYYY-MM-DD HH:mm:ss Z',
              merge_logs: true,
              kill_timeout: 5000,
              listen_timeout: 3000,
              reload_delay: 1000
            }]
          };
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: '0644'

    - name: Create logs directory
      file:
        path: "{{ app_path }}/logs"
        state: directory
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: '0755'

    - name: Stop existing PM2 processes
      shell: pm2 delete all || true
      become_user: "{{ app_user }}"
      ignore_errors: yes

    - name: Start application with PM2
      shell: |
        cd {{ app_path }}
        pm2 start ecosystem.config.js
        pm2 save
        pm2 startup
      become_user: "{{ app_user }}"

    - name: Wait for application to start
      wait_for:
        port: 3001
        host: localhost
        delay: 5
        timeout: 30

    - name: Display deployment completion message
      debug:
        msg: |
          MajiTask v3.0 deployment completed successfully!
          
          Application URL: https://{{ domain_name }}
          Admin Email: {{ admin_email }}
          Admin Password: {{ admin_password }}
          
          Database: MariaDB ({{ db_name }})
          API Endpoint: https://{{ domain_name }}/api
          
          PM2 process: majitask-v3
          Logs: {{ app_path }}/logs/ (and pm2 logs majitask-v3)
          Health Check: curl https://{{ domain_name }}/api/health

  handlers:
    - name: reload systemd
      systemd:
        daemon_reload: yes

    - name: restart majitask
      systemd:
        name: majitask
        state: restarted
