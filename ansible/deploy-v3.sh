#!/bin/bash

# MajiTask v3.0 Deployment Script
# This script deploys the upgraded MajiTask application with PostgreSQL and enhanced security

set -e

# Configuration
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
APP_PATH="/home/apps/majitask"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to print colored output
print_info() {
    echo -e "${BLUE}ℹ${NC} $1"
}

print_success() {
    echo -e "${GREEN}✓${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}⚠${NC} $1"
}

print_error() {
    echo -e "${RED}✗${NC} $1"
}

# Banner
echo -e "${GREEN}"
echo "╔══════════════════════════════════════════════════════════════╗"
echo "║                    MajiTask v3.0 Deployment                 ║"
echo "║            PostgreSQL + Authentication + Security           ║"
echo "╚══════════════════════════════════════════════════════════════╝"
echo -e "${NC}"

# Check if running as root
if [[ $EUID -ne 0 ]]; then
   print_error "This script must be run as root (use sudo)"
   exit 1
fi

print_info "Starting MajiTask v3.0 deployment..."

# Update system
print_info "Updating system packages..."
apt update && apt upgrade -y
print_success "System packages updated"

# Check if we're in the correct directory
if [ ! -f "$SCRIPT_DIR/00_majitask_master.yaml" ]; then
    print_error "Ansible playbooks not found in $SCRIPT_DIR"
    print_info "Please run this script from the ansible directory"
    exit 1
fi

# Install Ansible if not present
if ! command -v ansible-playbook &> /dev/null; then
    print_info "Installing Ansible..."
    apt install -y software-properties-common
    add-apt-repository --yes --update ppa:ansible/ansible
    apt install -y ansible
    print_success "Ansible installed"
else
    print_info "Ansible is already installed"
fi

# Ensure application directory exists
print_info "Creating application directory structure..."
mkdir -p "$APP_PATH"/{logs,uploads,database,scripts}
print_success "Directory structure created"

# Copy application files if they don't exist
if [ ! -f "$APP_PATH/package-v3.json" ]; then
    print_warning "Application files not found in $APP_PATH"
    print_info "Make sure to copy your MajiTask v3.0 files to $APP_PATH before running deployment"
    
    # Create a basic structure for testing
    print_info "Creating basic file structure for deployment test..."
    touch "$APP_PATH/package-v3.json"
    mkdir -p "$APP_PATH/server"
    echo 'console.log("MajiTask v3.0 placeholder");' > "$APP_PATH/server/index.js"
fi

# Run the main deployment playbook
print_info "Running Ansible deployment playbook..."
cd "$SCRIPT_DIR"

# Set Ansible configuration
export ANSIBLE_HOST_KEY_CHECKING=False
export ANSIBLE_STDOUT_CALLBACK=default

# Run the master playbook
if ansible-playbook -i inventory.ini 00_majitask_master.yaml -v; then
    print_success "Ansible deployment completed successfully"
else
    print_error "Ansible deployment failed"
    print_info "Check the logs above for error details"
    exit 1
fi

# Run post-deployment verification
print_info "Running post-deployment verification..."
if [ -f "$SCRIPT_DIR/verify-deployment-v3.sh" ]; then
    bash "$SCRIPT_DIR/verify-deployment-v3.sh"
else
    print_warning "Verification script not found"
fi

# Display final status
print_success "MajiTask v3.0 deployment completed!"

echo -e "\n${GREEN}=== Deployment Summary ===${NC}"
echo -e "${YELLOW}Application:${NC} MajiTask v3.0"
echo -e "${YELLOW}Path:${NC} $APP_PATH"
echo -e "${YELLOW}URL:${NC} https://majitask.fun"
echo -e "${YELLOW}Database:${NC} PostgreSQL"

echo -e "\n${YELLOW}Services Started:${NC}"
echo "• PostgreSQL Database"
echo "• MajiTask Application Server"
echo "• Nginx Reverse Proxy"
echo "• PM2 Process Manager"

echo -e "\n${YELLOW}Security Features:${NC}"
echo "• Argon2 Password Hashing"
echo "• JWT Authentication"
echo "• Two-Factor Authentication"
echo "• Rate Limiting"
echo "• Audit Logging"
echo "• Role-Based Access Control"

echo -e "\n${YELLOW}Next Steps:${NC}"
echo "1. Configure DNS for majitask.fun to point to this server"
echo "2. SSL certificate will be auto-generated by Let's Encrypt"
echo "3. Access the application at https://majitask.fun"
echo "4. Login with admin credentials (check .env file)"
echo "5. Test all v3.0 features"

echo -e "\n${YELLOW}Useful Commands:${NC}"
echo "• Check status: systemctl status majitask"
echo "• View logs: journalctl -u majitask -f"
echo "• PM2 status: sudo -u majitask pm2 list"
echo "• Database: sudo -u postgres psql majitask"
echo "• Restart app: systemctl restart majitask"

echo -e "\n${GREEN}🎉 MajiTask v3.0 is ready to use!${NC}"
